{"version":3,"file":"commonHelpers.js","sources":["../src/js/pixabay-api.js","../src/js/render-functions.js","../src/main.js"],"sourcesContent":["const BASE_URL = 'https://pixabay.com/api/';\n\nconst options = {\n  key: '43802528-015b222178f5679b6792a0cf2',\n  q: 'house',\n  image_type: 'photo',\n  orientation: 'horizontal',\n  safesearch: true,\n};\n\nexport const fetchPhotoByQuery = (q = 'yellow') => {\n  const searchParams = new URLSearchParams({\n    key: options.key,\n    q,\n    orientation: options.orientation,\n    image_type: options.image_type,\n    safesearch: options.safesearch,\n  });\n\n  return fetch(`${BASE_URL}?${searchParams}`).then(response => {\n    if (!response.ok) {\n      throw new Error(\n        iziToast.show({\n          title: 'Error',\n          message:\n            'Sorry, there are no images matching your search query. Please try again!',\n        })\n      );\n    }\n\n    return response.json();\n  });\n};\n","export const createImageGalleryItem = images => {\n  return images\n    .map(\n      ({\n        webformatURL,\n        largeImageURL,\n        tags,\n        likes,\n        views,\n        downloads,\n        comments,\n      }) => `\n  \n  <div class=\"gallery-item\">\n               <a class=\"gallery-link\" href=\"${largeImageURL}\">\n          <img\n            class=\"gallery-image\"\n            src=\"${webformatURL}\"\n            alt=\"${tags}\"\n          />\n        </a>\n            <div class = \"card-img\">\n            <div class = \"likes\">\n            <h2 class = \"card-title\">Likes</h2>\n            <p class = image-text>${likes}</p></div>\n            \n            <div class = \"views\">\n            <h2 class = \"card-title\">Views</h2>\n            <p class = image-text>${views}</p></div>\n\n            <div class = \"comments\">\n            <h2 class = \"card-title\">Comments</h2>\n            <p class = image-text>${comments}</p></div>\n            \n            <div class = \"downloads\">\n            <h2 class = \"card-title\">Downloads</h2>\n            <p class = image-text>${downloads}</p></div>\n            </div>\n          </div>`\n    )\n    .join('');\n};\n","import SimpleLightbox from 'simplelightbox';\nimport 'simplelightbox/dist/simple-lightbox.min.css';\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\nimport { fetchPhotoByQuery } from './js/pixabay-api.js';\nimport { createImageGalleryItem } from './js/render-functions.js';\n\nconst galleryEl = document.querySelector('.js-gallery');\nconst searchFormEl = document.querySelector('.js-search-form');\nconst loaderEl = document.querySelector('.js-loader');\n\nfunction onSearchFormSubmit(event) {\n  event.preventDefault();\n  const searchQuery = event.target.elements.searchKeyword.value.trim();\n\n  if (searchQuery === '') {\n    galleryEl.innerHTML = '';\n    event.target.reset();\n    iziToast.show({\n      message:\n        'Sorry, there are no images matching your search query. Please try again!',\n      position: 'topRight',\n      timeout: 2000,\n      color: 'red',\n    });\n\n    return;\n  }\n\n  galleryEl.innerHTML = '';\n  loaderEl.classList.remove('is-hidden');\n\n  fetchPhotoByQuery(searchQuery)\n    .then(imagesData => {\n      if (imagesData.total === 0) {\n        iziToast.show({\n          message: 'Sorry, there are no images for this query',\n          position: 'topRight',\n          timeout: 2000,\n          color: 'red',\n        });\n      }\n\n      galleryEl.innerHTML = createImageGalleryItem(imagesData.hits);\n\n      new SimpleLightbox('.gallery-list a', {\n        captionsData: 'alt',\n        captionDelay: 250,\n      });\n    })\n\n    .catch(error => console.log(error))\n    .finally(() => {\n      event.target.reset();\n      loaderEl.classList.add('is-hidden');\n    });\n}\n\nsearchFormEl.addEventListener('submit', onSearchFormSubmit);\n"],"names":["BASE_URL","options","fetchPhotoByQuery","q","searchParams","response","createImageGalleryItem","images","webformatURL","largeImageURL","tags","likes","views","downloads","comments","galleryEl","searchFormEl","loaderEl","onSearchFormSubmit","event","searchQuery","iziToast","imagesData","SimpleLightbox","error"],"mappings":"6vBAAA,MAAMA,EAAW,2BAEXC,EAAU,CACd,IAAK,qCACL,EAAG,QACH,WAAY,QACZ,YAAa,aACb,WAAY,EACd,EAEaC,EAAoB,CAACC,EAAI,WAAa,CACjD,MAAMC,EAAe,IAAI,gBAAgB,CACvC,IAAKH,EAAQ,IACb,EAAAE,EACA,YAAaF,EAAQ,YACrB,WAAYA,EAAQ,WACpB,WAAYA,EAAQ,UACxB,CAAG,EAED,OAAO,MAAM,GAAGD,CAAQ,IAAII,CAAY,EAAE,EAAE,KAAKC,GAAY,CAC3D,GAAI,CAACA,EAAS,GACZ,MAAM,IAAI,MACR,SAAS,KAAK,CACZ,MAAO,QACP,QACE,0EACZ,CAAS,CACT,EAGI,OAAOA,EAAS,MACpB,CAAG,CACH,EChCaC,EAAyBC,GAC7BA,EACJ,IACC,CAAC,CACC,aAAAC,EACA,cAAAC,EACA,KAAAC,EACA,MAAAC,EACA,MAAAC,EACA,UAAAC,EACA,SAAAC,CACR,IAAY;AAAA;AAAA;AAAA,+CAGmCL,CAAa;AAAA;AAAA;AAAA,mBAGzCD,CAAY;AAAA,mBACZE,CAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oCAMaC,CAAK;AAAA;AAAA;AAAA;AAAA,oCAILC,CAAK;AAAA;AAAA;AAAA;AAAA,oCAILE,CAAQ;AAAA;AAAA;AAAA;AAAA,oCAIRD,CAAS;AAAA;AAAA,iBAGxC,EACA,KAAK,EAAE,ECjCNE,EAAY,SAAS,cAAc,aAAa,EAChDC,EAAe,SAAS,cAAc,iBAAiB,EACvDC,EAAW,SAAS,cAAc,YAAY,EAEpD,SAASC,EAAmBC,EAAO,CACjCA,EAAM,eAAc,EACpB,MAAMC,EAAcD,EAAM,OAAO,SAAS,cAAc,MAAM,OAE9D,GAAIC,IAAgB,GAAI,CACtBL,EAAU,UAAY,GACtBI,EAAM,OAAO,QACbE,EAAS,KAAK,CACZ,QACE,2EACF,SAAU,WACV,QAAS,IACT,MAAO,KACb,CAAK,EAED,MACD,CAEDN,EAAU,UAAY,GACtBE,EAAS,UAAU,OAAO,WAAW,EAErCf,EAAkBkB,CAAW,EAC1B,KAAKE,GAAc,CACdA,EAAW,QAAU,GACvBD,EAAS,KAAK,CACZ,QAAS,4CACT,SAAU,WACV,QAAS,IACT,MAAO,KACjB,CAAS,EAGHN,EAAU,UAAYT,EAAuBgB,EAAW,IAAI,EAE5D,IAAIC,EAAe,kBAAmB,CACpC,aAAc,MACd,aAAc,GACtB,CAAO,CACP,CAAK,EAEA,MAAMC,GAAS,QAAQ,IAAIA,CAAK,CAAC,EACjC,QAAQ,IAAM,CACbL,EAAM,OAAO,QACbF,EAAS,UAAU,IAAI,WAAW,CACxC,CAAK,CACL,CAEAD,EAAa,iBAAiB,SAAUE,CAAkB"}